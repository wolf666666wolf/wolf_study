按时间索引 按回复索引 
主题：LINUX 部分命令详解    查看完整版    作者：906456159  时间：2010-08-30 18:39 

标题：        作者：spyself  时间：2010-09-17 16:29 
好长啊。。。。建议你发成附件的形式  
标题：LINUX 部分命令详解        作者：906456159  时间：2010-08-30 18:39 
vi一：基本操作：

1：鼠标的移动：k（上）；j（下）；h（左）；l（右）

2：:q!（强行退出） ：wq（保存退出）;“ZZ”等同于:wq。

3：“x”删除光标所在的字符。

4：“i”，在当前光标处进行输入。

vi二：删除类命令

1：“dw”删除一个单词（包括空格）；“de”删除一个单词（不包括空格）

2：“d$”从当前光标删除到行末

3：“dd”删除一整行，“2dd”删除两行

4：“u”撤销最后执行的命令，“U”修正整行，“ctrl＋R”连续撤销

5：“yy”复制当前行。

6：“yw”复制单词。

vi三：置入类命令

1：“p”将最后一次删除的命令置于光标后。（用dd删除后，p可以用来粘贴）

2：“r”输入r和一个字符来替换光标所在位置的字符。

3：“cw”改变一个单词的部分或者全部，lubw，将光标放在u处，然后cw一个“ine”可以改成“line”。

4：“v”进入可视化视图，可以移动方向键来选中某一段内容。

vi四：定位及文件状态

1：“ctrl＋g”将会在底栏显示文件名和总行数。显示光标所在行的行数。

2：“shift＋G”光标直接跳转到文件的首行(gg)，“shift＋g”光标直接跳转到文件的最后一行（G）。

3：输出停留的行数，按下shift＋G直接跳转。

4：“/”搜索一个字符，输入/后，然后键入想要查找的字符串。

5：“%"可以查找匹配的({[和)}]，用于定位反括号。

6：“:s/old/new/g”改变当前行的字符，替换old为new。

7：“:#,#s/old/new/g”改变两个行之间的（＃，＃）字符串，替换old为new。

8：“:%s/old/new/g”替换整个文件中的每个匹配串。

9：“:%s/old/new/gc”加“c”参数可以在替换全文的时候添加对替换的询问用以让用户确认。

10： “：first"跳到首行

11： “：last"跳到尾行

vi五：内执行外部命令

1：“:!”，在!后面加入命令，如“:!ls”；“:!dir”

2：“:w test”将改动保存为test文件，“:!rm test”删除该文件

3：“:#,# w test”保存两行之间的内容到test文件中。（行数可以使用ctrl＋G来查看 

4：“:r test”在当前文件中插入另外一个文件的内容 :r /etc/named.conf，将test中内容插入到该光标处。

vi六：打开类命令

1：“o”在光标所在行下方插入一新行，“O”在光标所在行上方插入一新行，并且都以输入模式进行插入。

2：“shift＋O”直接在该行上方新开一行。

3：“$”直接将光标调到行末，“a”可以在光标处插入文本（避免了i），输入“A”直接在行末插入文本。

4：“R”在光标处输入R可以连续的替换多个字符。（免i），直至键入“ESC”。

5：查找时“/abcde”，然后按“n”可以继续查找。

vi七：打开多个文件 #vi test1 test2 test3

1. :args 查看多个文件状况

2. :next 打开多个文件向后切换

3. :prev 向前切换



vi七：帮助

1：“:help”打开帮助，“:q”退出。

2：F1

/etc/passwd用户账号文件，vipw=vi /etc/passwd:编辑/etc/passwd文件

#head /etc/passwd //显示/etc/passwd文件前十行内容

每个字段用":"分割，其含义如下：

用户名/密码/用户标识号/组标识号/用户描述（注释性描述）/用户家目录（主目录）/使用的shell(登录shell，一般该字段为空)

用户名代表用户帐号的字符串，是用户在终端登录提示Login:时输入的名称。

用户密码这个字段存放着加密后的用户口令字。

用户标识号是一个整数，系统内部用它来标识用户。

用户标识号的取值范围是0-65535。0是超级用户root的标识号，1-99系统保留，作为管理帐号，普通用户的标识号从100开始。Linux系统这个界限是500。

组标识号字段记录的是用户所属的用户组。它对应着/etc/group文件中的一条记录。

注释性描述字段记录着用户的一些个人情况。

主目录，也就是用户的起始工作目录，它是用户在登录到系统之后所处的目录。

用户的登录shell也可以指定为某个特定的程序（此程序不是一个命令解释器）



root用户有自己单独的家目录

/etc/shadow:存放用户密码（口令）文件

表示没有shell:/bin/false;/dev/null;/nologin

/etc/shadow该文件只有root用户拥有读权限。

/etc/shadow中的记录行与/etc/passwd中的一一对应，由若干个字段组成，字段之间用":"隔开。

登录名：加密口令：最后一次修改时间：最小时间间隔：最大时间间隔：警告时间：不活动时间：失效时间：标志

登录名是与/etc/passwd文件中的登录名相一致的用户帐号。

口令字段存放的是加密后的用户口令字，长度为13个字符。如果含有不属于集合{./0-9A-Za-z}中的字符，则对应的用户不能登录。用户密码"*"代表未登陆。

最小时间间隔指的是两次修改口令之间所需的最小天数。

最大时间间隔指的是口令保持有效的最大天数，有效范围是0-99999，99999代表终身不用该密码。

警告时间字段表示的是从系统开始警告用户到用户密码正式失效之间的天数。

不活动时间表示的是用户没有登录活动但帐号仍能保持有效的最大天数。

失效时间字段给出的是一个绝对的天数。

/etc/login.defs用户设置密码会采用该文件的默认值

pass_MAX_DAYS(密码最大天数)

pass_MIN_

pwck:该命令检测文件/etc/passwd和/etc/shadow的每行字段的格式和值是否正确。

/etc/group:用户组帐号文件,vigr=vi /etc/group:编辑group文件

组名：口令：组标识号：组内用户列表

组名(group_name)是用户组的名称，由字母或数字构成。

口令(password)字段存放的是用户组加密后的口令字。Linux系统的用户组都没有口令，即这个字段一般为空，或者是"*"。

组标识号(GID)与用户标识号类似，也是一个整数，被系统内部用来标识组。

组内用户(user_list)列表是属于这个组的所有用户的列表，不同用户之间用逗号(,)分隔。

/etc/gshadow:组口令文件

与/etc/shadow文件一样，该文件只有root用户拥有读权限。

组名(group_name)：用户组名称，该字段与group文件中的组名称对应。

组密码(encrypted_password):用户组密码

组管理员(group_administrator)：组的管理员帐号

组用户列表(group_members)：属于该组的用户列表，不同用户之间用逗号(,)分隔。

grpck :该命令检测文件/etc/group和/etc/gshadow的每行字段的格式和值是否正确

useradd命令是添加用户帐号

-c 指定一段注释性描述 useradd -c public zl //对zl的描述是public

-d 指定用户主目录，如此目录不存在，用-m选项可以创建主目录 useradd -d /tmp zl //把zl用户家目录该为/tmp

-g 指定用户所属的用户组 useradd -g root zl //把zl用户添加到root组中

-G 指定用户所属的附加组

-s 指定用户的登陆shell

-M 不创建用户主目录

-m 用户的主目录不存在，就建立一个

Useradd –D:显示或设置useradd命令使用的默认值

userdel删除用户帐号

userdel 用户名：删除指定的用户帐号

userdel –r 用户名(userdel 用户名;rm 用户名)：删除指定的用户帐号及宿主目录

例：#useradd -g root kkk //把kkk用户加入root组里

usermod修改已有用户的信息

usermod –l:新用户名 当前登陆用户名

usermod –L 用户名：用于锁定指定用户账号，使其不能登陆系统

usermod –U 用户名：对锁定的用户帐号进行解锁

passwd –d 用户名：使帐号无口令，即用户不需要口令就能登录系统

例：#usermod -l user2 user1 //把用户user2改名为user1

groupadd添加建立新用户组

groupadd 组帐号：该命令由于填加组帐号，该GID大于500

groupadd –r 系统组帐号：该GID小于500

groupmod修改已有用户组的信息

groupmod:该命令用于改变用户组帐号的属性

groupmod –g 新的GID 用户组帐号名

groupmod –n 新组名 原组名：此命令由于改变用户组的名称

groupdel 组名：该命令用于删除指定的组帐号

passwd 用户帐号：此命令用于设定用户口令

passwd –S 用户帐号：此命令用于查询指定用户帐号的口令状态，该命令只有root可以使用

passwd –l 用户帐号名：此命令用于锁定用户帐号的口令，该命令只有root可以使用

passwd –u 用户帐号名：此命令用于解锁指定用户帐号的口令，该命令只有root可以使用

修改组成员 

如果我们需要将一个用户加入一个组，只需编辑/etc/group文件，将用户名写到组名的后面。

例如将newuser用户加入到softdevelop组，只需找到softdevelop这一行： 

softdevelop:x:506:user1,user2 

然后在后面加上newuser，形成： 

softdevelop:x:506:user1,user2,newuser 

gpasswd –a 用户帐号名 组帐号名：此命令用于将指定用户帐号添加到指定用户组

groups 用户名：查看此用户属于哪些组中

gpasswd –d 用户帐号名 组帐号名：此命令用于将指定用户帐号从指定用户组中删除

gpasswd –A 组管理员 用户组：此命令用于设置指定用户为用户组的管理员，当“组管理员”设为空时，可以取消组管理员

chfn:命令用于设定指定用户的finger信息

chsh -l:显示当前系统可以使用的Shell

chsh –s shell的全路径名 用户名：此命令用于设置指定用户的登陆Shell

id 命令用于显示用户当前的uid,gid和用户所属的组列表

newgrp 用户所属的组帐号：此命令用于转换用户的当前组到指定的组帐号，用户必须属于该组才可以正确执行命令。此命令不指定用户组时转换为用户私有组

例：#chsh -s /bin/csh user1 //设置user1的shell为"/bin/csh"

#grep user1 /etc/passwd //查看/etc/passwd里的user1的shell

whoami:显示目前自己是谁

who:显示目前有哪些人在使用

w:显示目前有哪些人在使用以及用户对cpu的占用率

sudo命令给普通用户分配root特定的权限

sudo工具由文件/etc/sudoers进行配置

例：给test用户释放重启计算机权限

#whereis init(二进制文件)

#vi /etc/sudoers //配置sudo工具

root All=(All)All

test All=/sbin/init,/sbin/init 6 //给test用户释放重启计算机权限

wq //保存退出/etc/sudoers文件

#sudo /sbin/init 6 //普通用户执行重启计算机

passwd:敲入用户密码，而不是root的密码





每一种操作系统都是由成千上万个不同种类的文件所组成的。其中有系统本身自带的文件，用户自己的文件，还有共享文件等等。

我们有时候经常忘记某份文件放在硬盘中的哪个地方。在微软的WINDOWS操作系统中要查找一份文件是相当简单的事情，只要在桌

面上点击“开始”-“搜索”中就能按照各种方式在本地硬盘上，局域网络，甚至在INTERNET上查找各种文件，文档。



　　可是使用Linux的用户就没有那么幸运了，在Linux上查找某个文件确实是一件比较麻烦的事情。毕竟在Linux中需要我们使用

专用的“查找”命令来寻找在硬盘上的文件。Linux下的文件表达格式非常复杂，不象WINDOWS,DOS下都是统一的AAAAAAA.BBB格式

那么方便查找，在WINDOWS中，只要知道要查找的文件的文件名或者后缀就非常容易查找到。Linux中查找文件的命令通常为

“find”命令，“find”命令能帮助我们在使用,管理Linux的日常事务中方便的查找出我们需要的文件。对于Linux新手来说，

“find”命令也是了解和学习Linux文件特点的方法。因为Linux发行版本繁多，版本升级很快，在Linux书籍上往往写明某个配置

文件的所在位置，往往Linux新手按图索骥还是不能找到。比如说REDHAT Linux 7.O和REDHAT Linux 7.1中有些重要的配置文件所

在的硬盘位置和文件目录就有了很大的改变，如果不学会使用“find”命令，那么在成千上万的Linux文件中要找到其中的一个配

置文件是相当困难的，笔者在没有精通“find”命令之前就吃过这样的苦头。好，下面就详细为大家介绍强大的“find”命令的全

部使用方法和用途。

　　通过文件名查找法：

　　这个方法说起来就和在WINDOWS下查找文件一样容易理解了。如果你把这个文件放在单个的文件夹里面，只要使用常见的“ls"命

令就能方便的查找出来，那么使用“find”命令来查找它就不能给你留下深刻的印象，毕竟“find”命令的强大功能不止这个。如果

知道了某个文件的文件名，而不知道这个文件放到哪个文件夹，甚至是层层套嵌的文件夹里。举例说明，假设你忘记了httpd.conf这

个文件在系统的哪个目录下，甚至在系统的某个地方也不知道，则这是可以使用如下命令：

　　find / -name httpd.conf 

　　这个命令语法看起来很容易就明白了，就是直接在find后面写上-name，表明要求系统按照文件名查找，最后写上httpd.conf这个

目标文件名即可。稍等一会系统会在计算机屏幕上显示出查找结果列表：

　　etc/httpd/conf/httpd.conf 

　　这就是httpd.conf这个文件在Linux系统中的完整路径。查找成功。

　　如果输入以上查找命令后系统并没有显示出结果，那么不要以为系统没有执行find/ -name httpd.conf命令，而可能是你的系统

中没有安装Apache服务器，这时只要你安装了Apache Web服务器，然后再使用find / -name httpd.conf就能找到这个配置文件了。

　　无错误查找技巧：

　　在Linux系统中“find”命令是大多数系统用户都可以使用的命令，并不是ROOT系统管理员的专利。但是普通用户使用“find”命

令时也有可能遇到这样的问题，那就是Linux系统中系统管理员ROOT可以把某些文件目录设置成禁止访问模式。这样普通用户就没有权

限用“find”命令来查询这些目录或者文件。当普通用户使用“find”命令来查询这些文件目录是，往往会出现"Permissiondenied."

(禁止访问)字样。系统将无法查询到你想要的文件。为了避免这样的错误，我们可是使用转移错误提示的方法尝试着查找文件，输入

　　find / -name access_log 2>/dev/null 

　　这个方法是把查找错误提示转移到特定的目录中去。系统执行这个命令后，遇到错误的信息就直接输送到stderrstream 2中，

access_log 2就是表明系统将把错误信息输送到stderrstream 2中，/dev/null是一个特殊的文件，表明空的或者错误的信息，这样查

询到的错误信息将被转移了，不会再显示了。

　　在Linux系统查找文件也会遇到这样一个实际问题。如果我们在整个硬盘，这个系统中查找某个文件就要花费相当长的一段时间，

特别是大型Linux系统和容量较大的硬盘，文件放在套嵌很深的目录中的时候。如果我们知道了这个文件存放在某个大的目录中，那么

只要在这个目录中往下找就能节省很多时间了。使用find /etc -name httpd.conf就可以解决这个问题。上面的命令就是表示在etc目

录中查询httpd.conf这个文件。这里再说明一下“/”这个函数符号的含义，如果输入“find /”就是表示要求Linux系统在整个ROOT目

录下查找文件，也就是在整个硬盘上查找文件，而“find /etc”就是只在etc目录下查找文件。因为“find /etc”表示只在etc目录下

查找文件，所以查找的速度就相应要快很多了。

　　根据部分文件名查找方法：

　　这个方法和在WINDOWS中查找已知的文件名方法是一样的。不过在Linux中根据部分文件名查找文件的方法要比在WINDOWS中的同类

查找方法要强大得多。例如我们知道某个文件包含有srm这3个字母，那么要找到系统中所有包含有这3个字母的文件是可以实现的，输入：

　　find /etc -name '*srm*' 

　　这个命令表明了Linux系统将在/etc整个目录中查找所有的包含有srm这3个字母的文件，比如absrmyz，tibc.srm等等符合条件的文件

都能显示出来。如果你还知道这个文件是由srm这3个字母打头的，那么我们还可以省略最前面的星号，命令如下：

　　find /etc -name 'srm*' 

　　这是只有像srmyz这样的文件才被查找出来，象absrmyz或者absrm这样的文件都不符合要求，不被显示，这样查找文件的效率和可靠

性就大大增强了。



　　根据文件的特征查询方法：

　　如果只知道某个文件的大小，修改日期等特征也可以使用“find”命令查找出来，这和WINDOWS系统中的"搜索"功能是基本相同的。

在微软的"搜索"中WINDOWS中的"搜索助理"使得搜索文件和文件夹、打印机、用户以及网络中的其他计算机更加容易。它甚至使在Internet

上搜索更加容易。"搜索助理"还包括一个索引服务，该服务维护了计算机中所有文件的索引，使得搜索速度更快。使用"搜索助理"时，

用户可以指定多个搜索标准。例如，用户可以按名称、类型及大小搜索文件和文件夹。用户甚至可以搜索包含特定文本的文件。如果用户

正使用Active Directory，这时还可以搜索带有特定名称或位置的打印机。

　　例如我们知道一个Linux文件大小为1,500 bytes，那么我们可是使用如下命令来查询find / -size 1500c，字符c表明这个要查找的文

件的大小是以bytes为单位。如果我们连这个文件的具体大小都不知道，那么在Linux中还可以进行模糊查找方式来解决。例如我们输入

find / -size +10000000c这个命令，则标明我们指定系统在根目录中查找出大于10000000字节的文件并显示出来。命令中的“＋”是表示

要求系统只列出大于指定大小的文件，而使用“-”则表示要求系统列出小于指定大小的文件。下面的列表就是在Linux使用不同“find"命

令后系统所要作出的查找动作，从中我们很容易看出在Linux中使用“find"命令的方式是很多的，“find"命令查找文件只要灵活应用，

丝毫不必在WINDOWS中查找能力差。

　　find / -amin -10 #查找在系统中最后10分钟访问的文件

　　find / -atime -2 #查找在系统中最后48小时访问的文件

　　find / -empty #查找在系统中为空的文件或者文件夹

　　find / -group cat #查找在系统中属于groupcat的文件

　　find / -mmin -5 #查找在系统中最后5分钟里修改过的文件

　　find / -mtime -1 #查找在系统中最后24小时里修改过的文件

　　find / -nouser #查找在系统中属于作废用户的文件

　　find / -user fred #查找在系统中属于FRED这个用户的文件

　　　

　　下面的列表就是对find命令所可以指定文件的特征进行查找的部分条件。在这里并没有列举所有的查找条件，参考有关Linux有关书籍

可以知道所有find命令的查找函数。

　　-amin n

　　查找系统中最后N分钟访问的文件

　　-atime n

　　查找系统中最后n*24小时访问的文件

　　-cmin n

　　查找系统中最后N分钟被改变状态的文件

　　-ctime n

　　查找系统中最后n*24小时被改变状态的文件

　　-empty

　　查找系统中空白的文件，或空白的文件目录，或目录中没有子目录的文件夹

　　-false

　　查找系统中总是错误的文件

　　-fstype type

　　查找系统中存在于指定文件系统的文件，例如：ext2 .

　　-gid n

　　查找系统中文件数字组ID为n的文件

　　-group gname

　　查找系统中文件属于gnam文件组，并且指定组和ID的文件

　　　

　　Find命令的控制选项说明：

　　Find命令也提供给用户一些特有的选项来控制查找操作。下表就是我们总结出的最基本，最常用的find命令的控制选项及其用法。

　　选项

　　用途描述

　　-daystart

　　.测试系统从今天开始24小时以内的文件，用法类似-amin

　　-depth

　　使用深度级别的查找过程方式,在某层指定目录中优先查找文件内容

　　-follow

　　遵循通配符链接方式查找;另外，也可忽略通配符链接方式查询

　　-help

　　显示命令摘要

　　-maxdepth levels

　　在某个层次的目录中按照递减方法查找

　　-mount

　　不在文件系统目录中查找，用法类似-xdev.

　　-noleaf

　　禁止在非UNUX文件系统，MS-DOS系统，CD-ROM文件系统中进行最优化查找

　　-version

　　打印版本数字

　　　

　　使用-follow选项后，find命令则遵循通配符链接方式进行查找，除非你指定这个选项，否则一般情况下find命令将忽略通配符链

接方式进行文件查找。

　　-maxdepth选项的作用就是限制find命令在目录中按照递减方式查找文件的时候搜索文件超过某个级别或者搜索过多的目录，这样

导致查找速度变慢，查找花费的时间过多。例如，我们要在当前(.)目录技巧子目录中查找一个名叫fred的文件，我们可以使用如下命令

　　find . -maxdepth 2 -name fred 

　　假如这个fred文件在./sub1/fred目录中，那么这个命令就会直接定位这个文件，查找很容易成功。假如，这个文件在./sub1/sub2/fred

目录中，那么这个命令就无法查找到。因为前面已经给find命令在目录中最大的查询目录级别为2，只能查找2层目录下的文件。这样做的

目的就是为了让find命令更加精确的定位文件，如果你已经知道了某个文件大概所在的文件目录级数，那么加入-maxdepth n就很快的能在

指定目录中查找成功。

　　使用混合查找方式查找文件:

　　find命令可以使用混合查找的方法，例如我们想在/tmp目录中查找大于100000000字节并且在48小时内修改的某个文件，我们可以使

用-and来把两个查找选项链接起来组合成一个混合的查找方式。

　　find /tmp -size +10000000c -and -mtime +2 

　　学习过计算机语言的朋友都知道，在计算机语言里，使用and ,or分别表示“与”和“或”的关系。在Linux系统的查找命令中一样通用。

　　还有这样的例子，

　　find / -user fred -or -user george 

　　我们可以解释为在/tmp目录中查找属于fred或者george这两个用户的文件。

　　在find命令中还可以使用“非”的关系来查找文件，如果我们要在/tmp目录中查找所有不属于panda的文件，使用一个简单的

　　find /tmp ! -user panda 

　　命令就可以解决了。很简单。

　　查找并显示文件的方法:

　　查找到某个文件是我们的目的，我们更想知道查找到的文件的详细信息和属性，如果我们采取现查找文件，在使用LS命令来查看文件信

息是相当繁琐的，现在我们也可以把这两个命令结合起来使用。

　　find / -name "httpd.conf" -ls 

　　系统查找到httpd.conf文件后立即在屏幕上显示httpd.conf文件信息。

　　12063 34 -rw-r--r-- 1 root root 33545 Dec 30 15:36 /etc/httpd/conf/httpd.conf

　　下面的表格就是一些常用的查找文件并显示文件信息的参数和使用方法

　　选项

　　用途描述

　　-exec command;

　　查找并执行命令

　　-fprint file

　　打印文件完整文件名

　　-fprint0 file

　　打印文件完整文件名包括空的文件

　　-fprintf file format

　　打印文件格式

　　-ok command;

　　给用户命令执行操作，根据用户的Y确认输入执行

　　-printf format

　　打印文件格式

　　-ls

　　打印同种文件格式的文件.

　　　

　　总结：到这里为止我们已经学习了这名多关于find命令的使用方法，也列出了很多常用的find命令的选项，如果我们能熟练掌握在

Linux中find命令的使用方法，那么在Linux中查找文件也不是一件困难的事情。



分区格式化：

fdisk /dev/sdb //分区

mkfs.ext3 /dev/sdb1 //格式化

mount /dev/sdb1 /mnt/sdb1 //挂载





计划任务：date

设定5分钟内在 / 下建立一个文件

at 22:57 12/1/2006 

at>touch test.txt 在2006年12月1日22：57在 / 目录下建立一个文件

ctrl +D 结束

atq 查看进程

dateconfig



周期运行：cron

cron命令：循环执行某一命令。at命令只能执行一次，虽然都是计划任务的命令，这是这两个命令的区别

rpm -qi vixie-cron //查看是否安装了crond

chkconfig --list |more crond

service crond status

用户cron：用户自己加的

组 cron：系统默认就有的

#ls /etc/crontab //显示crontab命令路径

#cat /etc/crontab //查看系统crontab

* * * * * 用户名 可执行命令

下面是每个位置的表示意义和取值范围

名称 * * * * * 用户名 可执行命令

表示 分钟 小时 日期 月份 星期

取值范围 0-59 0-23 1-31 1-12 0-6

* * * * * //代表每分钟

1 * * * * //代表每小时第1分钟

02 12 * * * //代表每天12点第2分钟（每天12：02）

0-59/2 * * * * //代表每2分钟执行一次任务

#which 命令名称：查看命令所在目录路径。

#which date //查看date命令所在目录路径

/bin/date

#crontab -e //编辑crontab命令，-e(edit)代表编辑

* * * * * /bin/date >>/root/66.txt //每分钟向/root/66.txt写入一次当前系统时间

#crontab -l //显示用户计划任务

#crontab -r //删除用户计划任务

注意:#crontab -r命令，在哪个用户下，删除的就是哪个用户的计划任务，还需要注意的是该命令是删除

所有用户的所有计划任务。还有普通用户不能删除root的计划任务的权限。

普通用户进行crontab命令计划任务操作

例：#su - text //切换到普通用户text

$crontab -e //在text普通用户中进行crontab命令计划任务编辑

* * * * * /bin/date >>/home/text/33.txt //每分钟向/home/text/33.txt写入一次当前系统时间

cat /home/text/33.txt //显示/home/text/33.txt文件内容

#crontab -u 用户名 -e //在root用户中给普通用户加计划任务编辑操作

#which crontab //查看crontab命令位置

说明：which命令是查看命令所在位置，which会在$PATH里找，在普通用户里不好用。

ll /usr/bin/crontab //查看crontab命令权限

cat /etc/crontab //显示/etc/crontab文件内容

小例子

#cd /home/aaa //进入普通用户aaa家(home)目录里

#vi 1.txt //建立1.txt文件

/sbin/init 6 //对1.txt文件进行操作，写入/sbin/init 6（重启操作），然后wq（保存退出）

#chmod 755 1.txt //把1.txt文件权限改成可执行文件

#run-parts aaa //执行该操作机器将重启（注意：执行该操作只能在/home/aaa目录外执行才有效）

#cd /var/spool/cron //建立的计划任务都存放在/var/spool/cron目录里

#ls //显示可以执行crontab命令的用户

#cat 用户名 //并可以用cat命令显示用户crontab命令的内容

#cat test //显示test用户计划任务内容 





tar归档命令：

1：tar cf 123.tar 111 222

c是建立文档，f是指定归档文件的名称，一般“.tar”是指归档文件，也就是说将一系列的文件或者目录进行整理打包。

2：tar czf 123.tar.gz 111

z是压缩，“.gz”是指该文件为压缩文件。

3：tar tf 123.tar

t是查看归档中的文件，f是指归档的文件



tar -uf 123.tar 123（加入一个123文件到归档文件中，U是更新选项）



rat tzf 123.tar.gz

tzf是查看压缩后的归档文件

4：tar xf 123.tar

xf是释放归档文件

5：tar zxf 123.tar.gz

xzf是释放压缩归档文件

file命令。file 123.tar是什么文件

－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－

ls /var/log：专门存放日志文件

－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－

You have new mail in /var/spool/mail/root

------------------------------------------------------------------------------------------------------

定时运行应用程序：

1：rpm -q vixie-cron

查询是否存在cron程序

2：service crond status（service cron start；service cron stop）

查看cron程序的后台服务是否启用

3：crontab -l

查看cron的任务列表

4：crontab -e

设置cron的任务

5：crontab -r

删除crontab列表任务

会收到You have new mail in /var/spool/mail/root的信息

* * * * * touch /123/111.txt

－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－

at命令使用

1：date查看一下时间和日期

2：at 10:09 8/19/2006回车

进入了： at>模式

在里面输入：mkdir /123/dir 在123目录下面建立dir目录。

3：ctrl＋D退出at任务模式

4：atq查看at安排的任务。

5：atrm 1在任务执行前删除1号任务。  
点击查看完整版 
